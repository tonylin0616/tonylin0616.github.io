<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TonyLin&#39;blog</title>
  
  <subtitle>learn ,then record</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tonglinchina.com/"/>
  <updated>2020-04-19T09:44:42.021Z</updated>
  <id>http://tonglinchina.com/</id>
  
  <author>
    <name>童帅</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>机器学习第一章</title>
    <link href="http://tonglinchina.com/2020/04/19/introduction_ml/"/>
    <id>http://tonglinchina.com/2020/04/19/introduction_ml/</id>
    <published>2020-04-19T09:34:27.000Z</published>
    <updated>2020-04-19T09:44:42.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-3-监督学习"><a href="#1-3-监督学习" class="headerlink" title="1-3 监督学习"></a>1-3 监督学习</h2><p>我们先看一个例子，然后给出正式的定义，现有从俄勒冈的波特兰市收集的数据，绘制数据集，横轴是不同房屋的平方英尺数，纵轴是不同房子的价格，单位是千美元，如下图：<br><a id="more"></a><br><img src="/2020/04/19/introduction_ml/houseppre.png" alt="houseppre"></p><p>假设一个朋友有个750平方英尺的房子，他想要卖掉这个房子，想知道卖多少钱，那么学习算法能帮你什么呢？我们可以用一条直线来拟合数据，价格大概在15万美金，但是上面数据用二次函数或二阶多项式来拟合会更好，价格大概在20万美金。后面我们会讨论如何选择和决定是用直线拟合数据还是用二次函数拟合数据。<br>以上就是一个监督学习的例子，<strong>监督学习是指我们给算法一个数据集，其中包含了正确答案，也就是我们给它一个房价的数据集，在每个数据集中的每个样本，我们都给出正确的价格</strong>。算法的目的是给出更多的正确答案，例如为你朋友想要卖掉的这所房子给出估价。<strong>使用更专业的术语，它也被称会线性回归，我们想要预测连续的数值输出</strong>.下面是另一个例子。横轴是肿瘤的尺寸，纵轴1或0表示是或否，如下图：</p><p><img src="/2020/04/19/introduction_ml/breastcaner.png" alt="breastcaner"></p><p>假设她的肿瘤的大小在上图红色箭头区域，机器学习的问题是你能否估计出肿瘤是良性的还是恶性的概率，<strong>用更专业的术语来说，这是一个分类问题，我们预测一个离散值输出</strong>.在实现场景中可能会有两个以上的可能的输出值；绘制数据上图中提供了另一种形式，O表示恶性肿瘤，X表示良性肿瘤。<br>在上面例子中我们只使用了一个特征，在其他机器学习中，我们会有多个特征。假设我们不仅知道肿瘤的大小，还知道病人的年纪，圈表示肿瘤是良性的，叉表示肿瘤恶性的，如下图：</p><p><img src="/2020/04/19/introduction_ml/breast_caner_feartures.png" alt="breast_caner_feartures"></p><p>在给定的数据集中学习，就是在数据上画出一条直线，设法将恶性肿瘤和良性肿瘤分开。假设有一个朋友不幸得了肿瘤如上图中点，根据直线划分可以判断肿瘤在良性区域。上面是两个特征，其实还会有其他一些特征如：肿瘤的厚度、肿瘤细胞大小的均匀性、肿瘤细胞形状的的均匀性等。在实际的机器学习中，不仅仅就3到5个特征，可能会无穷多的特征，如何在计算机中存储无穷多数量的特征，以向量机算法为例，就有一个灵活的数学技巧允许计算机处理无穷多的特征。</p><h2 id="1-4-无监督学习"><a href="#1-4-无监督学习" class="headerlink" title="1-4 无监督学习"></a>1-4 无监督学习</h2><p>样本在监督学习中，每个样本都被标明为恶性肿瘤或者良性肿瘤；在无监督学习中，每个样本没有标明任何标签(恶性肿瘤或者良性肿瘤)，我们有一个数据集，如下图：</p><p><img src="/2020/04/19/introduction_ml/unsupervised_learn.png" alt="unsupervised_learn"></p><p>上图中数据我们不知道要拿来做什么，也不知道每个数据点究竟是什么，我们只被告知这里有一个数据集，你能在其中找到某种结构吗？给定数据集，无监督学习算法可能判定该数据集包含两个不同的簇，我们可以把这些数据分成两个不同的簇，这就是聚类算法。聚类算法应用在很大领域，如：</p><ul><li>谷歌新闻应用，谷歌搜索成千上万条新闻，然后自动地将他们分醋</li><li>基因学应用，基本思想是给定一组不同的个体，每个个体检测他们是否拥有某个特定的基因，也就是检测特定基因的表达程度，这些颜色红绿灰等等，展示了不同个体拥有特定基因的程度，运行一个聚类算法把不同的个体归入不同的类</li><li>大型计算机集群，试图找出哪些机器趋向于协同工作，如果你把这些机器放在一起，你可以让你的数据中心更高效地工作</li><li>社交网络的分析，如果得知你经常联系的人或者得知你的好友有哪些，我们可以自动识别出你的圈子以及判断哪些人是你认识的</li><li>市场细分中的应用，对于一个客户数据集，自动找出不同的市场分割并自动将你的客户分到不同的细分市场</li><li>天文数据分析</li></ul><p>下面介绍一个实际的场景–鸡尾酒会问题，想象一下有一个很多人一起的宴会，大家都坐在一起说话，大家都同时在说话有许多声音混杂在一起，你几乎很难听清楚你面前人说的话。假设一个鸡尾酒会上只有两个人并且同时说话，在房间里面放置了两个麦克风，两个麦克风与两个人的距离不相同，两个麦克风记录了来自两人的声音的不同组合，如下图：</p><p><img src="/2020/04/19/introduction_ml/unsuper_learn_cookail_party.png" alt="unsuper_learn_cookail_party"></p><p>通过聚类算法可以把两个人的声音分成不同簇，再次放出来的时候可以清晰的听各自的声音，互相之间的混杂基本没有了。课程中有具体的声音演示以及octave的代码实现。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-3-监督学习&quot;&gt;&lt;a href=&quot;#1-3-监督学习&quot; class=&quot;headerlink&quot; title=&quot;1-3 监督学习&quot;&gt;&lt;/a&gt;1-3 监督学习&lt;/h2&gt;&lt;p&gt;我们先看一个例子，然后给出正式的定义，现有从俄勒冈的波特兰市收集的数据，绘制数据集，横轴是不同房屋的平方英尺数，纵轴是不同房子的价格，单位是千美元，如下图：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-机器学习" scheme="http://tonglinchina.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>公司值班表自动生成</title>
    <link href="http://tonglinchina.com/2020/04/11/%E5%85%AC%E5%8F%B8%E5%80%BC%E7%8F%AD%E6%8E%92%E7%8F%AD%E5%AE%9E%E7%8E%B0/"/>
    <id>http://tonglinchina.com/2020/04/11/公司值班排班实现/</id>
    <published>2020-04-11T08:01:27.000Z</published>
    <updated>2020-04-25T03:16:38.990Z</updated>
    
    <content type="html"><![CDATA[<h1 id="排班实现"><a href="#排班实现" class="headerlink" title="排班实现"></a>排班实现</h1><p>主要是使用pandas的dataframe和xlswriter进行实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> xlsxwriter</div></pre></td></tr></table></figure><a id="more"></a><p>数据初始化：<br>1、由于我们工作日和节假日值班人数不一致，这边分别初始化<br>2、当前月总天数<br>3、当前月第一个是周几<br>4、当前月工作日第一个人<br>5、当前月节假日第一个人<br>6、节假日日期数组，如当前月没有节假日，就是空数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">weekday = np.array([<span class="string">'童'</span>,<span class="string">'陆'</span>,<span class="string">'李'</span>,<span class="string">'石'</span>,<span class="string">'王'</span>,<span class="string">'崔'</span>])         <span class="comment">#工作日人数</span></div><div class="line">print(weekday,weekday.shape,type(weekday))  </div><div class="line">weekend = np.array([<span class="string">'童'</span>,<span class="string">'陆'</span>,<span class="string">'李'</span>,<span class="string">'石'</span>,<span class="string">'王'</span>,<span class="string">'崔'</span>,<span class="string">'蔡'</span>])      <span class="comment">#周末和节假日人数</span></div><div class="line">print(weekend,weekend.shape,type(weekend))</div><div class="line"></div><div class="line">month = <span class="number">31</span>                        <span class="comment">#当前月总天数</span></div><div class="line">firstday = <span class="number">2</span>                      <span class="comment">#当前月的第一天是周几；周一是index=0</span></div><div class="line">weekdayFisrtPerson = <span class="number">0</span>            <span class="comment">#当前月平常值班的第一个人;第一个是index=0</span></div><div class="line">weekEndFirstPerson = <span class="number">3</span>            <span class="comment">#当前月周末值班第一个人 ;第一个是index=0</span></div><div class="line">holidayFirstPerson = <span class="number">1</span>            <span class="comment">#当前月节假日值班第一个人 ;第一个是index=0</span></div><div class="line">holidays = np.array([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])      <span class="comment">#节假日具体日期</span></div></pre></td></tr></table></figure><h2 id="1、排班计算"><a href="#1、排班计算" class="headerlink" title="1、排班计算"></a>1、排班计算</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">computeDuty</span><span class="params">(weekday, weekdayFisrtPerson, weekend,weekEndFirstPerson,holidayFirstPerson,holidays,weekEndToDays,firstday,month)</span>:</span></div><div class="line">monthTemp = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">31</span>):</div><div class="line">    temp = i +<span class="number">1</span></div><div class="line">    <span class="keyword">if</span> temp <span class="keyword">in</span> holidays:</div><div class="line">        <span class="comment">#首先判断节假日</span></div><div class="line">        strTemp = str(temp) + weekend[holidayFirstPerson]</div><div class="line">        monthTemp.append(strTemp)</div><div class="line">        holidayFirstPerson =(holidayFirstPerson+<span class="number">1</span>)%<span class="number">7</span></div><div class="line">    <span class="keyword">elif</span> temp <span class="keyword">in</span> weekEndToDays:</div><div class="line">        <span class="comment">#节假日后，周末补班正常上班</span></div><div class="line">        strTemp = str(temp) + weekday[weekdayFisrtPerson]</div><div class="line">        monthTemp.append(strTemp)</div><div class="line">        weekdayFisrtPerson =(weekdayFisrtPerson+<span class="number">1</span>)%<span class="number">6</span></div><div class="line">    <span class="keyword">elif</span> firstday&lt;=<span class="number">4</span>:   </div><div class="line">        <span class="comment">#平常工作日</span></div><div class="line">        strTemp = str(temp) + weekday[weekdayFisrtPerson]</div><div class="line">        monthTemp.append(strTemp)</div><div class="line">        weekdayFisrtPerson =(weekdayFisrtPerson+<span class="number">1</span>)%<span class="number">6</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="comment">#周末</span></div><div class="line">        strTemp = str(temp) + weekend[weekEndFirstPerson]</div><div class="line">        monthTemp.append(strTemp)</div><div class="line">        weekEndFirstPerson =(weekEndFirstPerson+<span class="number">1</span>)%<span class="number">7</span></div><div class="line">    firstday = (firstday+<span class="number">1</span>)%<span class="number">7</span></div><div class="line"><span class="keyword">return</span> monthTemp,firstday</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sortMonth,lastDay =  computeDuty(weekday, weekdayFisrtPerson, weekend,weekEndFirstPerson,holidayFirstPerson,holidays,weekEndToDays,firstday,month)</div><div class="line">sortMonth</div></pre></td></tr></table></figure><p>人员安排<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">array([&apos;童&apos;, &apos;陆&apos;, &apos;李&apos;, &apos;陆&apos;, &apos;李&apos;, &apos;石&apos;, &apos;石&apos;, &apos;王&apos;, &apos;崔&apos;, &apos;童&apos;, &apos;石&apos;, &apos;王&apos;, &apos;陆&apos;,</div><div class="line">       &apos;李&apos;, &apos;石&apos;, &apos;王&apos;, &apos;崔&apos;, &apos;崔&apos;, &apos;蔡&apos;, &apos;童&apos;, &apos;陆&apos;, &apos;李&apos;, &apos;石&apos;, &apos;王&apos;, &apos;童&apos;, &apos;陆&apos;,</div><div class="line">       &apos;崔&apos;, &apos;童&apos;, &apos;陆&apos;, &apos;李&apos;], dtype=&apos;&lt;U1&apos;)</div></pre></td></tr></table></figure></p><p>补充当前月月初和月末的天数，并且将平铺数据进行每周拆分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">spaceStartDay =np.zeros(firstday,dtype=np.str)</div><div class="line">prefixAddSpaceDay =np.concatenate((spaceStartDay,sortMonth)) </div><div class="line"><span class="keyword">if</span> lastDay !=<span class="number">0</span>:</div><div class="line">    spaceEndDay =np.zeros((<span class="number">7</span>-lastDay),dtype=np.str)</div><div class="line">    allDay = np.concatenate((prefixAddSpaceDay,spaceEndDay)) </div><div class="line"><span class="keyword">else</span>:</div><div class="line">    allDay = prefixAddSpaceDay </div><div class="line"></div><div class="line">result = allDay.reshape((int(allDay.shape[<span class="number">0</span>]/<span class="number">7</span>), <span class="number">7</span>))</div><div class="line">result</div></pre></td></tr></table></figure><p>以星期为基准的人员安排<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">array([[&apos;&apos;, &apos;&apos;, &apos;童&apos;, &apos;陆&apos;, &apos;李&apos;, &apos;陆&apos;, &apos;李&apos;],</div><div class="line">       [&apos;石&apos;, &apos;石&apos;, &apos;王&apos;, &apos;崔&apos;, &apos;童&apos;, &apos;石&apos;, &apos;王&apos;],</div><div class="line">       [&apos;陆&apos;, &apos;李&apos;, &apos;石&apos;, &apos;王&apos;, &apos;崔&apos;, &apos;崔&apos;, &apos;蔡&apos;],</div><div class="line">       [&apos;童&apos;, &apos;陆&apos;, &apos;李&apos;, &apos;石&apos;, &apos;王&apos;, &apos;童&apos;, &apos;陆&apos;],</div><div class="line">       [&apos;崔&apos;, &apos;童&apos;, &apos;陆&apos;, &apos;李&apos;, &apos;&apos;, &apos;&apos;, &apos;&apos;]], dtype=&apos;&lt;U1&apos;)</div></pre></td></tr></table></figure></p><p>添加表格头，表格原样<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">df = pd.DataFrame(result,columns=[<span class="string">'周一'</span>,<span class="string">'周二'</span>,<span class="string">'周三'</span>,<span class="string">'周四'</span>,<span class="string">'周五'</span>,<span class="string">'周六'</span>,<span class="string">'周日'</span>])</div><div class="line">df</div></pre></td></tr></table></figure></p><p><img src="/2020/04/11/公司值班排班实现/表格原样.jpg" alt="表格原样"></p><h2 id="2、修改样式并导出EXCEL"><a href="#2、修改样式并导出EXCEL" class="headerlink" title="2、修改样式并导出EXCEL"></a>2、修改样式并导出EXCEL</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># BASEINPUT=os.path.dirname(__file__)</span></div><div class="line">OUTPUTH=os.path.join(<span class="string">'result.xlsx'</span>)</div><div class="line">writer = pd.ExcelWriter(OUTPUTH, engine=<span class="string">'xlsxwriter'</span>)</div><div class="line"> </div><div class="line"><span class="comment"># Convert the dataframe to an XlsxWriter Excel object. Note that we turn off</span></div><div class="line"><span class="comment"># the default header and skip one row to allow us to insert a user defined</span></div><div class="line"><span class="comment"># header.</span></div><div class="line">df.to_excel(writer, sheet_name=<span class="string">'Sheet1'</span>, startrow=<span class="number">1</span>, header=<span class="number">0</span>,index=<span class="keyword">False</span>)</div><div class="line"> </div><div class="line"><span class="comment"># Get the xlsxwriter workbook and worksheet objects.</span></div><div class="line">workbook  = writer.book</div><div class="line">worksheet = writer.sheets[<span class="string">'Sheet1'</span>]</div><div class="line"> </div><div class="line"><span class="comment"># Add a header format.</span></div><div class="line">weekend_format = workbook.add_format(&#123;</div><div class="line">    <span class="string">'bold'</span>: <span class="keyword">True</span>, <span class="comment"># 字体加粗</span></div><div class="line">    <span class="string">'text_wrap'</span>: <span class="keyword">True</span>, <span class="comment"># 是否自动换行</span></div><div class="line">    <span class="string">'valign'</span>: <span class="string">'top'</span>,  <span class="comment">#垂直对齐方式</span></div><div class="line">    <span class="string">'align'</span>: <span class="string">'center'</span>, <span class="comment"># 水平对齐方式</span></div><div class="line">    <span class="string">'fg_color'</span>: <span class="string">'#FFFF00'</span>, <span class="comment"># 单元格背景颜色</span></div><div class="line">    <span class="string">'border'</span>: <span class="number">1</span>&#125;) <span class="comment"># 单元格边框宽度</span></div><div class="line"></div><div class="line"><span class="comment"># Add a weekday format.</span></div><div class="line">weekday_format = workbook.add_format(&#123;</div><div class="line">    <span class="string">'bold'</span>: <span class="keyword">True</span>, <span class="comment"># 字体加粗</span></div><div class="line">    <span class="string">'text_wrap'</span>: <span class="keyword">True</span>, <span class="comment"># 是否自动换行</span></div><div class="line">    <span class="string">'valign'</span>: <span class="string">'top'</span>,  <span class="comment">#垂直对齐方式</span></div><div class="line">    <span class="string">'align'</span>: <span class="string">'center'</span>, <span class="comment"># 水平对齐方式</span></div><div class="line"><span class="comment">#     'fg_color': '#D7E4BC', # 单元格背景颜色</span></div><div class="line">    <span class="string">'border'</span>: <span class="number">1</span>&#125;) <span class="comment"># 单元格边框宽度</span></div><div class="line"></div><div class="line"><span class="comment"># Add a holiday format.</span></div><div class="line">holiday_format = workbook.add_format(&#123;</div><div class="line">    <span class="string">'bold'</span>: <span class="keyword">True</span>, <span class="comment"># 字体加粗</span></div><div class="line">    <span class="string">'text_wrap'</span>: <span class="keyword">True</span>, <span class="comment"># 是否自动换行</span></div><div class="line">    <span class="string">'valign'</span>: <span class="string">'top'</span>,  <span class="comment">#垂直对齐方式</span></div><div class="line">    <span class="string">'align'</span>: <span class="string">'center'</span>, <span class="comment"># 水平对齐方式</span></div><div class="line">    <span class="string">'fg_color'</span>: <span class="string">'#FF0000'</span>, <span class="comment"># 单元格背景颜色</span></div><div class="line">    <span class="string">'border'</span>: <span class="number">1</span>&#125;) <span class="comment"># 单元格边框宽度</span></div><div class="line"></div><div class="line">yellow = workbook.add_format(&#123;<span class="string">'fg_color'</span>: <span class="string">'#FFEE99'</span>&#125;)</div><div class="line">red=workbook.add_format(&#123;<span class="string">'fg_color'</span>: <span class="string">'#2dB054'</span>&#125;)</div><div class="line"></div><div class="line"><span class="comment"># holidays = np.array([4,5,6]) #节假日具体日期</span></div><div class="line">        </div><div class="line"><span class="comment"># # Write the column headers with the defined format.</span></div><div class="line"><span class="keyword">for</span> col_num, value <span class="keyword">in</span> enumerate(df.columns.values):</div><div class="line">    print(col_num,<span class="string">" -- &gt; "</span>,value)</div><div class="line">    <span class="keyword">if</span> col_num==<span class="number">5</span>:</div><div class="line">        worksheet.write(<span class="number">0</span>, col_num, value, weekend_format)</div><div class="line">    <span class="keyword">elif</span> col_num  == <span class="number">6</span>:</div><div class="line">        worksheet.write(<span class="number">0</span>, col_num, value, weekend_format)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        worksheet.write(<span class="number">0</span>, col_num, value, weekday_format)</div><div class="line">        </div><div class="line"><span class="comment"># # Write the row with the defined format.</span></div><div class="line"><span class="keyword">for</span> index, value <span class="keyword">in</span> df.iterrows():</div><div class="line"><span class="comment">#     print(index," -- &gt; ",value.values)</span></div><div class="line">    <span class="keyword">for</span> col_num, valuec <span class="keyword">in</span> enumerate(df.columns.values):</div><div class="line"><span class="comment">#         print(col_num," -- &gt; ",valuec)</span></div><div class="line">        </div><div class="line">        curDate = index *<span class="number">7</span>+col_num+<span class="number">1</span> - firstday</div><div class="line">        <span class="keyword">if</span> curDate <span class="keyword">in</span> holidays:</div><div class="line">            worksheet.write(index+<span class="number">1</span>, col_num, value[col_num], holiday_format)  </div><div class="line">        <span class="keyword">elif</span> col_num  == <span class="number">5</span>:</div><div class="line">            worksheet.write(index+<span class="number">1</span>, col_num, value[col_num], weekend_format)</div><div class="line">        <span class="keyword">elif</span> col_num  == <span class="number">6</span>:</div><div class="line">            worksheet.write(index+<span class="number">1</span>, col_num, value[col_num], weekend_format) </div><div class="line">        <span class="keyword">else</span>:    </div><div class="line">            worksheet.write(index+<span class="number">1</span>, col_num, value[col_num], weekday_format) </div><div class="line">            </div><div class="line">            </div><div class="line"><span class="comment"># worksheet.set_column("A:C", 16)</span></div><div class="line">format2 = workbook.add_format(&#123;<span class="string">'bold'</span>:  <span class="keyword">True</span>, <span class="string">'align'</span>: <span class="string">'vcenter'</span>, <span class="string">'valign'</span>: <span class="string">'top'</span>, <span class="string">'text_wrap'</span>: <span class="keyword">True</span>&#125;)</div><div class="line">worksheet.set_row(<span class="number">0</span>, cell_format=format2)</div><div class="line"><span class="comment"># Close the Pandas Excel writer and output the Excel file.</span></div><div class="line"></div><div class="line">writer.save()</div></pre></td></tr></table></figure><p>EXCEL中值班人员表</p><p><img src="/2020/04/11/公司值班排班实现/值班人员表.png" alt="导出值班人员表"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;排班实现&quot;&gt;&lt;a href=&quot;#排班实现&quot; class=&quot;headerlink&quot; title=&quot;排班实现&quot;&gt;&lt;/a&gt;排班实现&lt;/h1&gt;&lt;p&gt;主要是使用pandas的dataframe和xlswriter进行实现&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; pd&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; xlsxwriter&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="-机器学习" scheme="http://tonglinchina.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习环境搭建</title>
    <link href="http://tonglinchina.com/2020/04/06/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://tonglinchina.com/2020/04/06/机器学习环境搭建/</id>
    <published>2020-04-05T16:31:50.000Z</published>
    <updated>2020-04-06T08:00:54.922Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>机器学习大家都知道学习吴恩达老师的课程，我最近也是一直在看，发现里面的使用的语言比较旧，python是目前大家用的最多的，所以就在网上找了环境的搭建方法。<br>以前有段时间前端开发我用的Pycharm，刚开始使用选择了Pycharm工具，比较冗余，安装包特别大；也不是python专门使用的，安装依赖包不方便。<br>anaconda是一个开源的Python发现版本，包含了conda和Python等多个科学包及其依赖项；Anaconda可以管理包，就是能够安装、更新、移除工具包，比如Numpy、Scipy、pandas、Scikit-learn等数据分析中常用的包；也可以管理环境，能够创建、访问、共享、移除环境，用于隔离不同项目所需要的不同版本的工具包。<br><a id="more"></a></p><h1 id="Anaconda安装"><a href="#Anaconda安装" class="headerlink" title="Anaconda安装"></a>Anaconda安装</h1><p>从官网下载Anaconda，官网地址：<a href="https://www.anaconda.com/download/" target="_blank" rel="external">https://www.anaconda.com/download/</a>，根据提示进行安装，完成后会发现有几项内容：<br>      Anaconda Navigator：管理工具包和环境的图形用户界面。可以查看环境个数及各个环境下安装的包和依赖，图形化界面很直观<br>      Anaconda Prompt：终端，可以使用命令行来管理包和环境。貌似需要点开下终端，不然conda命令提示不可用<br>      Jupyter Notebook ：基于web的交互式计算环境，可以编辑易于人们阅读的文档，用于展示数据分析的过程。支持markdown可用文档化便于记录和数据分析<br>     Spyder：一个使用Python语言、跨平台、科学运算的集成开发环境。还没使用</p><h1 id="conda-常用命令"><a href="#conda-常用命令" class="headerlink" title="conda 常用命令"></a>conda 常用命令</h1><p>Anaconda Navigator界面中，针对每个环境中添加包，暂时还没找到那边可用添加，所以又去熟悉了下conda的命令。<br>conda info —envs  查看安装哪些环境<br>conda create —name tensorflow python=3.5 创建名字为tensorflow的环境<br>activate tensorflow 启动tensorflow环境<br>pip install tensorflow 安装tensorflow</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;机器学习大家都知道学习吴恩达老师的课程，我最近也是一直在看，发现里面的使用的语言比较旧，python是目前大家用的最多的，所以就在网上找了环境的搭建方法。&lt;br&gt;以前有段时间前端开发我用的Pycharm，刚开始使用选择了Pycharm工具，比较冗余，安装包特别大；也不是python专门使用的，安装依赖包不方便。&lt;br&gt;anaconda是一个开源的Python发现版本，包含了conda和Python等多个科学包及其依赖项；Anaconda可以管理包，就是能够安装、更新、移除工具包，比如Numpy、Scipy、pandas、Scikit-learn等数据分析中常用的包；也可以管理环境，能够创建、访问、共享、移除环境，用于隔离不同项目所需要的不同版本的工具包。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-机器学习" scheme="http://tonglinchina.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Cordova新建一个纯WebApp(二)</title>
    <link href="http://tonglinchina.com/2018/06/04/Cordova%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%BA%AFWebApp%EF%BC%88%E4%BA%8C%EF%BC%89-2018-06-04/"/>
    <id>http://tonglinchina.com/2018/06/04/Cordova新建一个纯WebApp（二）-2018-06-04/</id>
    <published>2018-06-04T01:49:27.000Z</published>
    <updated>2018-06-04T03:04:00.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在上一篇文章主要介绍项目的创建及插件的新建与添加，只是新建了一个工程的架子。这篇文章主要是讲解如何设置plugin.xml，讲解工程文件中插件相关文件。下面主要是用一个蓝牙插件进行说明，通过配置plugin.xml，然后添加进ios工程中，然后再添加js与原生交互的具体方法。<br><a id="more"></a></p><h1 id="添加package-json文件"><a href="#添加package-json文件" class="headerlink" title="添加package.json文件"></a>添加package.json文件</h1><p>添加packagp.json文件是解决上篇遗留的一个问题。上篇在创建一个插件后安装插件是会报错的，是因为缺少了package.json文件。    </p><ol><li>添加package.json<br><code>plugman createpackagejson .</code></li></ol><h2 id="新建的插件中的文件-及文件说明"><a href="#新建的插件中的文件-及文件说明" class="headerlink" title="新建的插件中的文件 及文件说明"></a>新建的插件中的文件 及文件说明</h2><ol><li>plugin.xml<br>plugin.xml是插件的配置文件，包括原生的类，资源文件及引用的文件，js请求原生的接受类。配置的详情如下图：<br><img src="/2018/06/04/Cordova新建一个纯WebApp（二）-2018-06-04/pluginXML文件.png" alt="pluginXML文件"><br>图中刚开始的说明就不讲解了，从<js-module></js-module>开始，如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;js-module src=&quot;www/BluetoothDevicePlugin.js&quot; name=&quot;BluetoothDevicePlugin&quot;&gt;</div><div class="line">        &lt;clobbers target=&quot;BluetoothDevicePlugin&quot;/&gt;</div><div class="line">&lt;/js-module&gt;</div></pre></td></tr></table></figure></li></ol><p>以上配置的是ios交互的js文件BluetoothDevicePlugin.js，该文件的使用在下面会详细说，clobbers属性是前端js中引用的名字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;config-file target=&quot;config.xml&quot; parent=&quot;/*&quot;&gt;</div><div class="line">     &lt;feature name=&quot;BluetoothDevicePlugin&quot;&gt;</div><div class="line">         &lt;param name=&quot;ios-package&quot; value=&quot;BluetoothDevicePlugin&quot; /&gt;</div><div class="line">     &lt;/feature&gt;</div><div class="line">&lt;/config-file&gt;</div></pre></td></tr></table></figure></p><p>在config.xml文件中配置添加feature和param，config.xml在下面会详细说。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;!-- self plugin sources --&gt;</div><div class="line">     &lt;header-file src=&quot;src/ios/BluetoothDevicePlugin.h&quot; /&gt;</div><div class="line">     &lt;source-file src=&quot;src/ios/BluetoothDevicePlugin.mm&quot; /&gt;</div><div class="line">&lt;!-- hhd sdk--&gt;</div><div class="line">     &lt;framework src=&quot;src/ios/SYDIDCardReader.framework&quot; custom=&quot;true&quot;/&gt;</div><div class="line">     &lt;!-- encrypt sdk by sensor--&gt;</div><div class="line">     &lt;header-file src=&quot;src/ios/encrypt.sdk/EncrylibInterface.h&quot; /&gt;</div><div class="line">     &lt;source-file src=&quot;src/ios/encrypt.sdk/libJsUnicomEncry.a&quot; framework=&quot;true&quot;/&gt;</div></pre></td></tr></table></figure></p><p>以上配置是把src中的这些文件添加到ios 平台中各个文件夹中，包括类，三方框架。</p><h2 id="ios平台中文件的更新及说明"><a href="#ios平台中文件的更新及说明" class="headerlink" title="ios平台中文件的更新及说明"></a>ios平台中文件的更新及说明</h2><p>插件中的plugin.xml文件配置完成后，进行安装插件，ios平台中会更新一些文件，下面对ios平台更新的文件进行说明。</p><ol><li><p>plugins<br>plugins是一个文件夹，存放插件的js与原生交互的js文件，如下图：<br><img src="/2018/06/04/Cordova新建一个纯WebApp（二）-2018-06-04/plugins文件夹.png" alt="plugins文件夹"><br>通过上图可以看出有三个js的文件，com.ai.ced.bluetooth这个文件夹名称是在新建package.json时设置的，目录下的www文件夹是新建插件时里面的www文件夹，可以看上篇的新建插件后文件目录。里面的bluetoothDevicePlugin.js是ios原生与js交互的文件，里面提供了原生的类名，方法及参数。如下图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var exec = require(&apos;cordova/exec&apos;);</div><div class="line"></div><div class="line">//初始化读卡器，iOS接受js发送的请求</div><div class="line">exports.initBluetoothPlugins = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;initBluetoothPlugins&quot;, [param]);</div><div class="line">&#125;;</div></pre></td></tr></table></figure></li><li><p>原生类 BluetoothDevicePlugin.h</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">//</div><div class="line">//  BluetoothDevicePlugin.h</div><div class="line">//  BlueToothCordova</div><div class="line">//</div><div class="line">//  Created by TONY on 2018/5/16.</div><div class="line">//  Copyright © 2018年 TONY. All rights reserved.</div><div class="line">//</div><div class="line"></div><div class="line">#import &quot;CDVPlugin.h&quot;</div><div class="line"></div><div class="line">@interface BluetoothDevicePlugin : CDVPlugin</div><div class="line">/**</div><div class="line"> 初始化读卡器</div><div class="line"> 请求参数：&#123;&#125;</div><div class="line"> @param command command description</div><div class="line"> */</div><div class="line">- (void)initBluetoothPlugins: (CDVInvokedUrlCommand *)command;</div><div class="line">    </div><div class="line">@end</div></pre></td></tr></table></figure></li><li><p>config.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;feature name=&quot;BluetoothDevicePlugin&quot;&gt;</div><div class="line">        &lt;param name=&quot;ios-package&quot; value=&quot;BluetoothDevicePlugin&quot; /&gt;</div><div class="line">    &lt;/feature&gt;</div></pre></td></tr></table></figure><p>feature中name是bluetoothDevicePlugin.js中exec(success, error, “BluetoothDevicePlugin”, “initBluetoothPlugins”, [param])方法的BluetoothDevicePlugin，param中name是工程中BluetoothDevicePlugin.h的类名。</p></li><li><p>cordova_pludins.js<br>cordova_pludins.js是一个插件映射列表，每个插件映射维护一个ios接受js请求的file和前端页面js请求发方法的clobbers。 如下图：<br><img src="/2018/06/04/Cordova新建一个纯WebApp（二）-2018-06-04/cordova_plugins_js文件.png" alt="cordova_plugins_js文件"><br>通过上图这个映射可以找到上面的bluetoothDevicePlugin.js文件 以及前端调用bluetoothDevicePlugin.js的方法</p><h2 id="前端页面调用"><a href="#前端页面调用" class="headerlink" title="前端页面调用"></a>前端页面调用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/common_mobile/component/cordova/cordova.js&quot;&gt;&lt;/script&gt;</div><div class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">     function button_onclick()&#123;</div><div class="line">      //蓝牙初始化</div><div class="line">      BlutoothDevicePlugin.initBluetoothPlugins();</div><div class="line">    &#125;</div><div class="line">   &lt;/script&gt;</div></pre></td></tr></table></figure></li></ol><p>使用cordova_pludins.js中clobbers的方式，及bluetoothDevicePlugin.js中initBluetoothPlugins方法可以与ios进行交互。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在上一篇文章主要介绍项目的创建及插件的新建与添加，只是新建了一个工程的架子。这篇文章主要是讲解如何设置plugin.xml，讲解工程文件中插件相关文件。下面主要是用一个蓝牙插件进行说明，通过配置plugin.xml，然后添加进ios工程中，然后再添加js与原生交互的具体方法。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-IOS" scheme="http://tonglinchina.com/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>Cordova新建一个纯WebApp</title>
    <link href="http://tonglinchina.com/2018/05/30/Cordor&amp;&amp;WebApp-2018-5-30/"/>
    <id>http://tonglinchina.com/2018/05/30/Cordor&amp;&amp;WebApp-2018-5-30/</id>
    <published>2018-05-30T09:03:50.000Z</published>
    <updated>2018-05-30T09:16:58.787Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>目前刚进入的公司用的纯web技术做跨平台的开发，让我一个IOS开发很不知所措。不过用的跨平台技术(Cordova)之前接触过还比较熟悉。最近结合之前的记忆，又在网上了解了下，进一步了解了这个技术。当时主要是在原生的工程里面集成Cordova的源码并自己维护插件及配置文件，与这次还是很不一样的。所以这次想集合两种不同的集成方式进行说明。<br>      使用Cordova的人群如下：</p><pre><code>* 移动应用开发者，想扩展一个应用的使用平台，而不通过每个平台的语言和工具集重新实现        * web开发者，想包装部署自己的web App将其分发到各个应用商店门户* 移动应用开发者，有兴趣混合原生应用组建和一个WebView可以接触设备API，或者你想开发一个原生和WebView组件之间的插件接口</code></pre><a id="more"></a>                <h1 id="WebApp"><a href="#WebApp" class="headerlink" title="WebApp"></a>WebApp</h1><h2 id="安装Cordova-CLI-Commond-Lines-Interface"><a href="#安装Cordova-CLI-Commond-Lines-Interface" class="headerlink" title="安装Cordova CLI(Commond Lines Interface)"></a>安装Cordova CLI(Commond Lines Interface)</h2><p>Cordova命令行工具作为npm包分发</p><ol><li>安装Homebrew<br><code>/usr/bin/ruby -e &quot;$(curl -fsSL https:// raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></li><li>安装node.js,安装完成后可以在命令行中使用node和npm，node.js是项目开发时的所需的代码库，是一种<br>javascript的运行环境，能够是的javascript脱离浏览器运行，在安装node.js的时候，npm也会跟着一起安装，它是包管理工具，npm管理node.js中的第三方插件<br><code>brew install node</code><br>查看是否安装成功<br><code>node -v</code></li><li>安装cordova模块使用node.js的npm工具。<br><code>sudo npm install -g cordova</code></li></ol><h2 id="新建一个项目"><a href="#新建一个项目" class="headerlink" title="新建一个项目"></a>新建一个项目</h2><ol><li>创建一个项目<br><code>cordova create MyApp</code></li><li>添加一个平台<br><code>cd MyApp</code><br><code>cordova platform add ios</code></li><li>运行App<br><code>cordova run iOS</code></li></ol><h2 id="添加自定义插件"><a href="#添加自定义插件" class="headerlink" title="添加自定义插件"></a>添加自定义插件</h2><ol><li>安装pluman<br><code>npm install -g pluman</code></li><li>创建一个插件<br>格式：<br> plugman create —name <pluginname> —plugin_id <pluginid> —plugin_version <version> [—path <directory>] [—variableNAME=VALUE]<br>参数:<br> pluginName: 插件名字<br> pluginID: 插件id, egg : coolPlugin<br> oversion: 版本, egg : 0.0.1<br> directory:一个绝对或相对路径的目录，该目录将创建插件项目<br> variable NAME=VALUE: 额外的描述，如作者信息和相关描述<br> egg : plugman create —name CoolPlugin —plugin_id coolPlugin —plugin_version 0.0.1<br>生成的目录如下：<br><img src="/2018/05/30/Cordor&&WebApp-2018-5-30/%E6%8F%92%E4%BB%B6%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95.png" alt=""><br>CoolPlugin.js和plugin.xml的解释可以参考 <a href="http://blog.csdn.net/itcatface/article/details/50520301" target="_blank" rel="external">http://blog.csdn.net/itcatface/article/details/50520301</a> ，这边博文解释的非常详细。<ul><li>plugin.xml的配置(主要用的是我们的蓝牙自定义插件)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;plugin id=&quot;com.ai.ced.bluetooth&quot; version=&quot;1.0.0&quot; </div><div class="line">        xmlns=&quot;http://apache.org/cordova/ns/plugins/1.0&quot;</div><div class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line">    &lt;name&gt;BluetoothDevicePlugin&lt;/name&gt;</div><div class="line">    &lt;description&gt;this is com.ai.ced.bluetooth cordova plugin&lt;/description&gt;</div><div class="line"></div><div class="line">    &lt;js-module src=&quot;www/BluetoothDevicePlugin.js&quot; name=&quot;BluetoothDevicePlugin&quot;&gt;</div><div class="line">        &lt;clobbers target=&quot;BluetoothDevicePlugin&quot;/&gt;</div><div class="line">    &lt;/js-module&gt;</div><div class="line">    </div><div class="line">    &lt;!-- android --&gt;</div><div class="line">    &lt;platform name=&quot;android&quot;&gt;</div><div class="line">        &lt;config-file parent=&quot;/*&quot; target=&quot;res/xml/config.xml&quot;&gt;</div><div class="line">            &lt;feature name=&quot;BluetoothDevicePlugin&quot;&gt;</div><div class="line">                &lt;param name=&quot;android-package&quot; value=&quot;com.ai.ced.bluetooth.BluetoothDevicePlugin&quot;/&gt;</div><div class="line">            &lt;/feature&gt;</div><div class="line">        &lt;/config-file&gt;</div><div class="line">        </div><div class="line">        &lt;source-file src=&quot;src/android/BluetoothDevicePlugin.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;</div><div class="line">        </div><div class="line">        &lt;!-- sensor--&gt;</div><div class="line">        &lt;source-file src=&quot;src/android/BtReaderClient.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;</div><div class="line">        &lt;!-- hhd --&gt;</div><div class="line">        &lt;source-file src=&quot;src/android/Busi_Idcard_device.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;</div><div class="line">        &lt;source-file src=&quot;src/android/CallBack.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;</div><div class="line">        &lt;source-file src=&quot;src/android/Common.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;</div><div class="line">        &lt;source-file src=&quot;src/android/Interface.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;   </div><div class="line"></div><div class="line">    &lt;/platform&gt;</div><div class="line">    </div><div class="line">     &lt;!-- ios --&gt;</div><div class="line">     &lt;platform name=&quot;ios&quot;&gt;</div><div class="line">         &lt;config-file target=&quot;config.xml&quot; parent=&quot;/*&quot;&gt;</div><div class="line">             &lt;feature name=&quot;BluetoothDevicePlugin&quot;&gt;</div><div class="line">                 &lt;param name=&quot;ios-package&quot; value=&quot;BluetoothDevicePlugin&quot; /&gt;</div><div class="line">             &lt;/feature&gt;</div><div class="line">         &lt;/config-file&gt;</div><div class="line"></div><div class="line">         &lt;!-- self plugin sources --&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/BluetoothDevicePlugin.h&quot; /&gt;</div><div class="line">         &lt;source-file src=&quot;src/ios/BluetoothDevicePlugin.mm&quot; /&gt;</div><div class="line">         &lt;!-- &lt;source-file src=&quot;src/ios/libBluetoothDevicePlugin.a&quot; framework=&quot;true&quot;/&gt;  --&gt;     </div><div class="line">         </div><div class="line">         &lt;!-- kaer kt8000 sdk--&gt;</div><div class="line">         &lt;framework src=&quot;src/ios/BLEIDCardReaderItem.framework&quot; custom=&quot;true&quot;/&gt;</div><div class="line">         &lt;!-- kaer kt8003 sdk--&gt;</div><div class="line">         &lt;framework src=&quot;src/ios/KaerIDCardItem.framework&quot; custom=&quot;true&quot;/&gt;</div><div class="line">         &lt;!-- sunrise sdk--&gt;</div><div class="line">         &lt;framework src=&quot;src/ios/SRIDCardReader.framework&quot; custom=&quot;true&quot;/&gt;</div><div class="line">         &lt;source-file src=&quot;src/ios/libReliableBurstData_arm64.a&quot; framework=&quot;true&quot;/&gt; </div><div class="line">         &lt;!-- sensor sdk--&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/SerialGATT.h&quot; /&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/BleTool.h&quot; /&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/imageLib.h&quot; /&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/IDbmplib.h&quot; /&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/SdsesDes.h&quot; /&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/Sdses_base64.h&quot; /&gt;</div><div class="line">         &lt;source-file src=&quot;src/ios/sensorsdk/libUnicomBTReadCard.a&quot; framework=&quot;true&quot;/&gt;</div><div class="line">         &lt;source-file src=&quot;src/ios/sensorsdk/libimageLib.a&quot; framework=&quot;true&quot;/&gt;</div><div class="line">         &lt;!-- hhd sdk--&gt;</div><div class="line">         &lt;framework src=&quot;src/ios/SYDIDCardReader.framework&quot; custom=&quot;true&quot;/&gt;</div><div class="line">         &lt;!-- encrypt sdk by sensor--&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/encrypt.sdk/EncrylibInterface.h&quot; /&gt;</div><div class="line">         &lt;source-file src=&quot;src/ios/encrypt.sdk/libJsUnicomEncry.a&quot; framework=&quot;true&quot;/&gt; </div><div class="line">     &lt;/platform&gt;    </div><div class="line">&lt;/plugin&gt;</div></pre></td></tr></table></figure></li></ul></directory></version></pluginid></pluginname></li></ol><ul><li>CoolPlugin.js配置(主要用的是我们的蓝牙自定义插件)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">var exec = require(&apos;cordova/exec&apos;);</div><div class="line"></div><div class="line">exports.initBluetoothPlugins = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;initBluetoothPlugins&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">exports.checkBluetoothStatus = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;checkBluetoothStatus&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">exports.scanDevices = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;scanDevices&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">exports.connectDevice = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;connectDevice&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line">exports.readIDCard = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;readIDCard&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">exports.readICCID = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;readICCID&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">exports.writeSim = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;writeSim&quot;, [param]);</div><div class="line">&#125;;</div></pre></td></tr></table></figure></li></ul><ol><li>插件的安装<br><code>cd MyApp</code><br><code>cordova plugin add &lt;插件的路径&gt;</code><br>如果想卸载插件的话<br><code>cordova plugin remove XX</code></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;目前刚进入的公司用的纯web技术做跨平台的开发，让我一个IOS开发很不知所措。不过用的跨平台技术(Cordova)之前接触过还比较熟悉。最近结合之前的记忆，又在网上了解了下，进一步了解了这个技术。当时主要是在原生的工程里面集成Cordova的源码并自己维护插件及配置文件，与这次还是很不一样的。所以这次想集合两种不同的集成方式进行说明。&lt;br&gt;      使用Cordova的人群如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* 移动应用开发者，想扩展一个应用的使用平台，而不通过每个平台的语言和工具集重新实现        
* web开发者，想包装部署自己的web App将其分发到各个应用商店门户
* 移动应用开发者，有兴趣混合原生应用组建和一个WebView可以接触设备API，或者你想开发一个原生和WebView组件之间的插件接口
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="-ios" scheme="http://tonglinchina.com/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>IOS消息推送</title>
    <link href="http://tonglinchina.com/2018/05/15/%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81-2018-0514/"/>
    <id>http://tonglinchina.com/2018/05/15/消息推送-2018-0514/</id>
    <published>2018-05-15T02:42:27.000Z</published>
    <updated>2018-05-15T02:43:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="消息推送"><a href="#消息推送" class="headerlink" title="消息推送"></a>消息推送</h1><p>当App获取到新的数据时，即使你的App没有在前台运行，本地通知和远程通知都是通知用户的方式。例如：当获取新的消息时，即时通讯App让用户知道。一个日历的app通知用户即将到的约会。本地通知和远程通知的区别是显而易见的：</p><pre><code>* 在本地通知中，App本地配置通知的具体信息并且把配置的通知发送给系统。当App不在前台时，处理交付的通知。* 在远程通知中，你使用你们公司的服务器通过APNS发送数据到用户设备。</code></pre><p>本地通知和远程通知都需要在app里面添加代码来支持调度和处理通知。比如远程通知，你必须提供一个服务环境来支撑从用户设备获取数据和发送通知数据通过APNS。<br><a id="more"></a></p><h1 id="用户通知框架和用户通知UI框架"><a href="#用户通知框架和用户通知UI框架" class="headerlink" title="用户通知框架和用户通知UI框架"></a>用户通知框架和用户通知UI框架</h1><p>对用户来说本地通知和远程通知都是相同的：</p><pre><code>1. 一个屏幕的告警或横幅2. 一个app图标上的徽章3. 一个声音伴随告警，横幅，徽章</code></pre><p><img src="/2018/05/15/消息推送-2018-0514/badged_app.png" alt="badged_app"><br>图1-1:app图标上的徽章</p><h1 id="APNs介绍"><a href="#APNs介绍" class="headerlink" title="APNs介绍"></a>APNs介绍</h1><p><img src="/2018/05/15/消息推送-2018-0514/remote_notif_simple.png" alt="remote_notif_simple"><br> 可以分为三个阶段：<br>第一阶段： APNS Pusher 应用程序把要发送的消息，目的iphone的标示打包，发给APNS<br>第二阶段：APNS 在自身的已注册 Push 服务列表中，查找有相应标识的 iphone, 并把消息发到 iphone<br>第三阶段： iphone 把发来的消息传递给相应的应用程序，并且按照设定弹出 Push 通知<br><img src="/2018/05/15/消息推送-2018-0514/消息推送应用内.png" alt="消息推送应用内"><br>  1: 首先是应用程序注册消息推送<br>  2: iOS 跟 APNS Service 要 deviceToken<br>  3: 应用程序将 deviceToken 发送给PUSH服务端程序<br>  4: 服务端程序向APNS服务器发送消息<br>  5: APNS 服务将消息发送给iphone应用程序</p><h1 id="通知代码"><a href="#通知代码" class="headerlink" title="通知代码"></a>通知代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">#pragma mark - 本地通知&amp;远程通知</div><div class="line">#pragma mark -注册</div><div class="line">#ifdef __IPHONE_8_0</div><div class="line">- (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings</div><div class="line">&#123;</div><div class="line">    [application registerForRemoteNotifications];</div><div class="line">&#125;</div><div class="line">#endif</div><div class="line"></div><div class="line">- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(nonnull NSData *)deviceToken</div><div class="line">&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line">- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error</div><div class="line">&#123;</div><div class="line">&#125;</div><div class="line">#pragma mark -接收通知</div><div class="line">//IOS 10之前</div><div class="line">- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification</div><div class="line">&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line">//IOS 10之前</div><div class="line">- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo</div><div class="line">&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line">//IOS 10之前 替换 didReceiveRemoteNotification 这个方法</div><div class="line">- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">//iOS10，只有当应用程序在前台时，该方法将被调用。</div><div class="line">- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler</div><div class="line">&#123;</div><div class="line">&#125;</div><div class="line">//IOS10 推送被点击</div><div class="line">- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void(^)())completionHandler</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;消息推送&quot;&gt;&lt;a href=&quot;#消息推送&quot; class=&quot;headerlink&quot; title=&quot;消息推送&quot;&gt;&lt;/a&gt;消息推送&lt;/h1&gt;&lt;p&gt;当App获取到新的数据时，即使你的App没有在前台运行，本地通知和远程通知都是通知用户的方式。例如：当获取新的消息时，即时通讯App让用户知道。一个日历的app通知用户即将到的约会。本地通知和远程通知的区别是显而易见的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* 在本地通知中，App本地配置通知的具体信息并且把配置的通知发送给系统。当App不在前台时，处理交付的通知。
* 在远程通知中，你使用你们公司的服务器通过APNS发送数据到用户设备。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本地通知和远程通知都需要在app里面添加代码来支持调度和处理通知。比如远程通知，你必须提供一个服务环境来支撑从用户设备获取数据和发送通知数据通过APNS。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-IOS" scheme="http://tonglinchina.com/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>2017总结</title>
    <link href="http://tonglinchina.com/2018/01/14/2017%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    <id>http://tonglinchina.com/2018/01/14/2017年度总结/</id>
    <published>2018-01-14T14:20:50.000Z</published>
    <updated>2020-04-05T16:31:07.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2018都开始几天了，总觉得应该总结下过去的2017，回头发现这一年一年过的貌似都差不多，但又不尽相同。工作了有4年了，没有做过年度总结，现在想想之前都过的比较浑噩，不知道自己的成长，感觉就是这么时间没有。所以我要写的什么让我有点激情，有点目标。什么时候看到的时候可以提醒自己。<br><a id="more"></a></p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>2017年进入了苏宁，进入了一个新的环境，刚来苏宁那会才知道苏宁有这么大，在我的印象中和途牛差不多。也是这个原因我来到了苏宁，现在想想其实在不在大公司无所谓，符合自身发展及成长才是最重要的。我算是幸运的，一直待在乐拼购项目组，对于ios这边的代码滚瓜烂熟，一年下来对于代码的感情比对公司的感情还大，每个功能都有我的痕迹。<br>题外话说了一些。其实吧，4年没写总结还有个原因就是不知道在工作方面写些什么，总感觉进步了，但又没进步。有很多要写，但又不知道从何说起。现在想想其实还是平时没做记录的习惯。今年一个做了一个重要的事就是自己搭建自己的博客</p><h3 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h3><p>博客是个好东西，可以用来做笔记，又能分享知识与交流（写的很不错），最重要就是能记录当时对于一件事，一个知识的心得。我觉得应该养成习惯记录下自己学习的东西与想法。这也是一个知识的总结。我觉得这个非常好。而且现在越来越多的人重视知识付费，当然我离这个还有十万八千里。但是起码我从现在做起，认真对待每个我接触的知识点。现在刚搭建起来希望可以用起来。</p><h4 id="看书与公开课"><a href="#看书与公开课" class="headerlink" title="看书与公开课"></a>看书与公开课</h4><p>这两个做的太少了，怎么回事。看了点重构又看了点ios内存管理但又都没看全。仔细想想真没了。公开课也是的学了点机器学习又看了点线性代数，也没看全。很喜欢半途而废。</p><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>在南京有了自己的小窝，自己的小孩也带来了南京，现在也一周岁了，每次下班回到家总是会心情很好。总感觉自己还没过度好做一个爸爸，一天天的看着孩子长大，貌似每天也没什么时间陪他，只想着他开心健康。</p><h2 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h2><p>其实2017想了很多，希望2018能一个一个去实现。</p><h5 id="完完整整的看书和公开课"><a href="#完完整整的看书和公开课" class="headerlink" title="完完整整的看书和公开课"></a>完完整整的看书和公开课</h5><h5 id="记录每个学习的东西在博客"><a href="#记录每个学习的东西在博客" class="headerlink" title="记录每个学习的东西在博客"></a>记录每个学习的东西在博客</h5><h5 id="换一个不错的工作"><a href="#换一个不错的工作" class="headerlink" title="换一个不错的工作"></a>换一个不错的工作</h5><h5 id="善待他人"><a href="#善待他人" class="headerlink" title="善待他人"></a>善待他人</h5><h5 id="出去旅游一次"><a href="#出去旅游一次" class="headerlink" title="出去旅游一次"></a>出去旅游一次</h5>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;2018都开始几天了，总觉得应该总结下过去的2017，回头发现这一年一年过的貌似都差不多，但又不尽相同。工作了有4年了，没有做过年度总结，现在想想之前都过的比较浑噩，不知道自己的成长，感觉就是这么时间没有。所以我要写的什么让我有点激情，有点目标。什么时候看到的时候可以提醒自己。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-杂谈" scheme="http://tonglinchina.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>风萧</title>
    <link href="http://tonglinchina.com/2017/11/29/diary-2017-1129/"/>
    <id>http://tonglinchina.com/2017/11/29/diary-2017-1129/</id>
    <published>2017-11-29T14:39:27.000Z</published>
    <updated>2017-11-29T15:28:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近闲来，得此博客，第一篇博客。<br>深夜的风，萧萧。<br>冬姑娘来了。</p><p>近来总有个远虑：客户端的前景。<br>隐约中客户端变的不那么重要，<br>微信的流量吸引，都希望在微信里面玩<br>出现了小程序，内嵌h5。<br>开发的周期及速度<br>出现了各种跨平台框架：weex,react native<br>插件式的框架cordova…<br>这些让原本做ios或安卓的都不能仅关注原生开发<br>然而ios本身也在不断更新，<br>如：今年的开发者大会：ARKit,coreML及swift 4.0</p><p>突然发现学习的东西太多太多<br>如何发展ios的专业知识的深度的同时又提升自己的广度呢<br>往往导致了深度没够，广度欠的境遇。</p><p>在工作3后不能在局限会用控件及好的三方框架<br>学习其中的原理及吸取实现的方式，规范及自己很少用的技术<br>这在其深</p><p>学习自己陌生但又相关的领域知识<br>新语言的学习，时刻关注开发者大会的更新，熟悉跨平台技术原理<br>这在其广</p><p>脱去懒惰，穿上勤奋<br>迎接萧萧的冬姑娘</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近闲来，得此博客，第一篇博客。&lt;br&gt;深夜的风，萧萧。&lt;br&gt;冬姑娘来了。&lt;/p&gt;
&lt;p&gt;近来总有个远虑：客户端的前景。&lt;br&gt;隐约中客户端变的不那么重要，&lt;br&gt;微信的流量吸引，都希望在微信里面玩&lt;br&gt;出现了小程序，内嵌h5。&lt;br&gt;开发的周期及速度&lt;br&gt;出现了各种
      
    
    </summary>
    
    
      <category term="-杂谈" scheme="http://tonglinchina.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TonyLin&#39;blog</title>
  
  <subtitle>learn ,then record</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tonglinchina.com/"/>
  <updated>2018-05-30T08:59:17.782Z</updated>
  <id>http://tonglinchina.com/</id>
  
  <author>
    <name>童帅</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://tonglinchina.com/2018/05/29/Cordor&amp;&amp;WebApp-2018-5-30/"/>
    <id>http://tonglinchina.com/2018/05/29/Cordor&amp;&amp;WebApp-2018-5-30/</id>
    <published>2018-05-29T07:46:08.529Z</published>
    <updated>2018-05-30T08:59:17.782Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>目前刚进入的公司用的纯web技术做跨平台的开发，让我一个IOS开发很不知所措。不过用的跨平台技术(Cordova)之前接触过还比较熟悉。最近结合之前的记忆，又在网上了解了下，进一步了解了这个技术。当时主要是在原生的工程里面集成Cordova的源码并自己维护插件及配置文件，与这次还是很不一样的。所以这次想集合两种不同的集成方式进行说明。<br>      使用Cordova的人群如下：</p><pre><code>* 移动应用开发者，想扩展一个应用的使用平台，而不通过每个平台的语言和工具集重新实现        * web开发者，想包装部署自己的web App将其分发到各个应用商店门户* 移动应用开发者，有兴趣混合原生应用组建和一个WebView可以接触设备API，或者你想开发一个原生和WebView组件之间的插件接口</code></pre><a id="more"></a>                <h1 id="WebApp"><a href="#WebApp" class="headerlink" title="WebApp"></a>WebApp</h1><h2 id="安装Cordova-CLI-Commond-Lines-Interface"><a href="#安装Cordova-CLI-Commond-Lines-Interface" class="headerlink" title="安装Cordova CLI(Commond Lines Interface)"></a>安装Cordova CLI(Commond Lines Interface)</h2><p>   Cordova命令行工具作为npm包分发</p><pre><code>1.  安装Homebrew`/usr/bin/ruby -e &quot;$(curl -fsSL https:// raw.githubusercontent.com/Homebrew/install/master/install)&quot;`2. 安装node.js,安装完成后可以在命令行中使用node和npm，node.js是项目开发时的所需的代码库，是一种javascript的运行环境，能够是的javascript脱离浏览器运行，在安装node.js的时候，npm也会跟着一起安装，它是包管理工具，npm管理node.js中的第三方插件`brew install node`查看是否安装成功`node -v`            3. 安装cordova模块使用node.js的npm工具。`sudo npm install -g cordova`</code></pre><h2 id="新建一个项目"><a href="#新建一个项目" class="headerlink" title="新建一个项目"></a>新建一个项目</h2><ol><li>创建一个项目<br><code>cordova create MyApp</code></li><li>添加一个平台<br><code>cd MyApp</code><br><code>cordova platform add ios</code></li><li>运行App<br><code>cordova run iOS</code></li></ol><h2 id="添加自定义插件"><a href="#添加自定义插件" class="headerlink" title="添加自定义插件"></a>添加自定义插件</h2><ol><li>安装pluman<br><code>npm install -g pluman</code></li><li>创建一个插件<br>格式：<br> plugman create —name <pluginname> —plugin_id <pluginid> —plugin_version <version> [—path <directory>] [—variableNAME=VALUE]<br>参数:<br> pluginName: 插件名字<br> pluginID: 插件id, egg : coolPlugin<br> oversion: 版本, egg : 0.0.1<br> directory:一个绝对或相对路径的目录，该目录将创建插件项目<br> variable NAME=VALUE: 额外的描述，如作者信息和相关描述<br> egg : plugman create —name CoolPlugin —plugin_id coolPlugin —plugin_version 0.0.1<br>生成的目录如下：<br><img src="/2018/05/29/Cordor&&WebApp-2018-5-30/%E6%8F%92%E4%BB%B6%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95.png" alt=""><br>CoolPlugin.js和plugin.xml的解释可以参考 <a href="http://blog.csdn.net/itcatface/article/details/50520301" target="_blank" rel="external">http://blog.csdn.net/itcatface/article/details/50520301</a> ，这边博文解释的非常详细。<ul><li>plugin.xml的配置(主要用的是我们的蓝牙自定义插件)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;plugin id=&quot;com.ai.ced.bluetooth&quot; version=&quot;1.0.0&quot; </div><div class="line">        xmlns=&quot;http://apache.org/cordova/ns/plugins/1.0&quot;</div><div class="line">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line">    &lt;name&gt;BluetoothDevicePlugin&lt;/name&gt;</div><div class="line">    &lt;description&gt;this is com.ai.ced.bluetooth cordova plugin&lt;/description&gt;</div><div class="line"></div><div class="line">    &lt;js-module src=&quot;www/BluetoothDevicePlugin.js&quot; name=&quot;BluetoothDevicePlugin&quot;&gt;</div><div class="line">        &lt;clobbers target=&quot;BluetoothDevicePlugin&quot;/&gt;</div><div class="line">    &lt;/js-module&gt;</div><div class="line">    </div><div class="line">    &lt;!-- android --&gt;</div><div class="line">    &lt;platform name=&quot;android&quot;&gt;</div><div class="line">        &lt;config-file parent=&quot;/*&quot; target=&quot;res/xml/config.xml&quot;&gt;</div><div class="line">            &lt;feature name=&quot;BluetoothDevicePlugin&quot;&gt;</div><div class="line">                &lt;param name=&quot;android-package&quot; value=&quot;com.ai.ced.bluetooth.BluetoothDevicePlugin&quot;/&gt;</div><div class="line">            &lt;/feature&gt;</div><div class="line">        &lt;/config-file&gt;</div><div class="line">        </div><div class="line">        &lt;source-file src=&quot;src/android/BluetoothDevicePlugin.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;</div><div class="line">        </div><div class="line">        &lt;!-- sensor--&gt;</div><div class="line">        &lt;source-file src=&quot;src/android/BtReaderClient.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;</div><div class="line">        &lt;!-- hhd --&gt;</div><div class="line">        &lt;source-file src=&quot;src/android/Busi_Idcard_device.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;</div><div class="line">        &lt;source-file src=&quot;src/android/CallBack.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;</div><div class="line">        &lt;source-file src=&quot;src/android/Common.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;</div><div class="line">        &lt;source-file src=&quot;src/android/Interface.java&quot; target-dir=&quot;src/com/ai/ced/bluetooth&quot;/&gt;   </div><div class="line"></div><div class="line">    &lt;/platform&gt;</div><div class="line">    </div><div class="line">     &lt;!-- ios --&gt;</div><div class="line">     &lt;platform name=&quot;ios&quot;&gt;</div><div class="line">         &lt;config-file target=&quot;config.xml&quot; parent=&quot;/*&quot;&gt;</div><div class="line">             &lt;feature name=&quot;BluetoothDevicePlugin&quot;&gt;</div><div class="line">                 &lt;param name=&quot;ios-package&quot; value=&quot;BluetoothDevicePlugin&quot; /&gt;</div><div class="line">             &lt;/feature&gt;</div><div class="line">         &lt;/config-file&gt;</div><div class="line"></div><div class="line">         &lt;!-- self plugin sources --&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/BluetoothDevicePlugin.h&quot; /&gt;</div><div class="line">         &lt;source-file src=&quot;src/ios/BluetoothDevicePlugin.mm&quot; /&gt;</div><div class="line">         &lt;!-- &lt;source-file src=&quot;src/ios/libBluetoothDevicePlugin.a&quot; framework=&quot;true&quot;/&gt;  --&gt;     </div><div class="line">         </div><div class="line">         &lt;!-- kaer kt8000 sdk--&gt;</div><div class="line">         &lt;framework src=&quot;src/ios/BLEIDCardReaderItem.framework&quot; custom=&quot;true&quot;/&gt;</div><div class="line">         &lt;!-- kaer kt8003 sdk--&gt;</div><div class="line">         &lt;framework src=&quot;src/ios/KaerIDCardItem.framework&quot; custom=&quot;true&quot;/&gt;</div><div class="line">         &lt;!-- sunrise sdk--&gt;</div><div class="line">         &lt;framework src=&quot;src/ios/SRIDCardReader.framework&quot; custom=&quot;true&quot;/&gt;</div><div class="line">         &lt;source-file src=&quot;src/ios/libReliableBurstData_arm64.a&quot; framework=&quot;true&quot;/&gt; </div><div class="line">         &lt;!-- sensor sdk--&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/SerialGATT.h&quot; /&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/BleTool.h&quot; /&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/imageLib.h&quot; /&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/IDbmplib.h&quot; /&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/SdsesDes.h&quot; /&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/sensorsdk/Sdses_base64.h&quot; /&gt;</div><div class="line">         &lt;source-file src=&quot;src/ios/sensorsdk/libUnicomBTReadCard.a&quot; framework=&quot;true&quot;/&gt;</div><div class="line">         &lt;source-file src=&quot;src/ios/sensorsdk/libimageLib.a&quot; framework=&quot;true&quot;/&gt;</div><div class="line">         &lt;!-- hhd sdk--&gt;</div><div class="line">         &lt;framework src=&quot;src/ios/SYDIDCardReader.framework&quot; custom=&quot;true&quot;/&gt;</div><div class="line">         &lt;!-- encrypt sdk by sensor--&gt;</div><div class="line">         &lt;header-file src=&quot;src/ios/encrypt.sdk/EncrylibInterface.h&quot; /&gt;</div><div class="line">         &lt;source-file src=&quot;src/ios/encrypt.sdk/libJsUnicomEncry.a&quot; framework=&quot;true&quot;/&gt; </div><div class="line">     &lt;/platform&gt;    </div><div class="line">&lt;/plugin&gt;</div></pre></td></tr></table></figure></li></ul></directory></version></pluginid></pluginname></li></ol><ul><li>CoolPlugin.js配置(主要用的是我们的蓝牙自定义插件)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">var exec = require(&apos;cordova/exec&apos;);</div><div class="line"></div><div class="line">exports.initBluetoothPlugins = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;initBluetoothPlugins&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">exports.checkBluetoothStatus = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;checkBluetoothStatus&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">exports.scanDevices = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;scanDevices&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">exports.connectDevice = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;connectDevice&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line">exports.readIDCard = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;readIDCard&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">exports.readICCID = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;readICCID&quot;, [param]);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">exports.writeSim = function(param, success, error) &#123;</div><div class="line">  exec(success, error, &quot;BluetoothDevicePlugin&quot;, &quot;writeSim&quot;, [param]);</div><div class="line">&#125;;</div></pre></td></tr></table></figure></li></ul><ol><li>插件的安装<br><code>cd MyApp</code><br><code>cordova plugin add &lt;插件的路径&gt;</code><br>如果想卸载插件的话<br><code>cordova plugin remove XX</code></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;目前刚进入的公司用的纯web技术做跨平台的开发，让我一个IOS开发很不知所措。不过用的跨平台技术(Cordova)之前接触过还比较熟悉。最近结合之前的记忆，又在网上了解了下，进一步了解了这个技术。当时主要是在原生的工程里面集成Cordova的源码并自己维护插件及配置文件，与这次还是很不一样的。所以这次想集合两种不同的集成方式进行说明。&lt;br&gt;      使用Cordova的人群如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* 移动应用开发者，想扩展一个应用的使用平台，而不通过每个平台的语言和工具集重新实现        
* web开发者，想包装部署自己的web App将其分发到各个应用商店门户
* 移动应用开发者，有兴趣混合原生应用组建和一个WebView可以接触设备API，或者你想开发一个原生和WebView组件之间的插件接口
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2017总结</title>
    <link href="http://tonglinchina.com/2018/05/15/2017%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    <id>http://tonglinchina.com/2018/05/15/2017年度总结/</id>
    <published>2018-05-15T02:50:40.000Z</published>
    <updated>2018-05-15T02:57:29.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2018都开始几天了，总觉得应该总结下过去的2017，回头发现这一年一年过的貌似都差不多，但又不尽相同。工作了有4年了，没有做过年度总结，现在想想之前都过的比较浑噩，不知道自己的成长，感觉就是这么时间没有。所以我要写的什么让我有点激情，有点目标。什么时候看到的时候可以提醒自己。<br><a id="more"></a></p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>2017年进入了苏宁，进入了一个新的环境，刚来苏宁那会才知道苏宁有这么大，在我的印象中和途牛差不多。也是这个原因我来到了苏宁，现在想想其实在不在大公司无所谓，符合自身发展及成长才是最重要的。我算是幸运的，一直待在乐拼购项目组，对于ios这边的代码滚瓜烂熟，一年下来对于代码的感情比对公司的感情还大，每个功能都有我的痕迹。<br>题外话说了一些。其实吧，4年没写总结还有个原因就是不知道在工作方面写些什么，总感觉进步了，但又没进步。有很多要写，但又不知道从何说起。现在想想其实还是平时没做记录的习惯。今年一个做了一个重要的事就是自己搭建自己的博客</p><h3 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h3><p>博客是个好东西，可以用来做笔记，又能分享知识与交流（写的很不错），最重要就是能记录当时对于一件事，一个知识的心得。我觉得应该养成习惯记录下自己学习的东西与想法。这也是一个知识的总结。我觉得这个非常好。而且现在越来越多的人重视知识付费，当然我离这个还有十万八千里。但是起码我从现在做起，认真对待每个我接触的知识点。现在刚搭建起来希望可以用起来。</p><h4 id="看书与公开课"><a href="#看书与公开课" class="headerlink" title="看书与公开课"></a>看书与公开课</h4><p>这两个做的太少了，怎么回事。看了点重构又看了点ios内存管理但又都没看全。仔细想想真没了。公开课也是的学了点机器学习又看了点线性代数，也没看全。很喜欢半途而废。</p><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>在南京有了自己的小窝，自己的小孩也带来了南京，现在也一周岁了，每次下班回到家总是会心情很好。总感觉自己还没过度好做一个爸爸，一天天的看着孩子长大，貌似每天也没什么时间陪他，只想着他开心健康。</p><h2 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h2><p>其实2017想了很多，希望2018能一个一个去实现。</p><h5 id="完完整整的看书和公开课"><a href="#完完整整的看书和公开课" class="headerlink" title="完完整整的看书和公开课"></a>完完整整的看书和公开课</h5><h5 id="记录每个学习的东西在博客"><a href="#记录每个学习的东西在博客" class="headerlink" title="记录每个学习的东西在博客"></a>记录每个学习的东西在博客</h5><h5 id="换一个不错的工作"><a href="#换一个不错的工作" class="headerlink" title="换一个不错的工作"></a>换一个不错的工作</h5><h5 id="善待他人"><a href="#善待他人" class="headerlink" title="善待他人"></a>善待他人</h5><h5 id="出去旅游一次"><a href="#出去旅游一次" class="headerlink" title="出去旅游一次"></a>出去旅游一次</h5>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;2018都开始几天了，总觉得应该总结下过去的2017，回头发现这一年一年过的貌似都差不多，但又不尽相同。工作了有4年了，没有做过年度总结，现在想想之前都过的比较浑噩，不知道自己的成长，感觉就是这么时间没有。所以我要写的什么让我有点激情，有点目标。什么时候看到的时候可以提醒自己。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-杂谈" scheme="http://tonglinchina.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>IOS消息推送</title>
    <link href="http://tonglinchina.com/2018/05/15/%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81-2018-0514/"/>
    <id>http://tonglinchina.com/2018/05/15/消息推送-2018-0514/</id>
    <published>2018-05-15T02:42:27.000Z</published>
    <updated>2018-05-15T02:43:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="消息推送"><a href="#消息推送" class="headerlink" title="消息推送"></a>消息推送</h1><p>当App获取到新的数据时，即使你的App没有在前台运行，本地通知和远程通知都是通知用户的方式。例如：当获取新的消息时，即时通讯App让用户知道。一个日历的app通知用户即将到的约会。本地通知和远程通知的区别是显而易见的：</p><pre><code>* 在本地通知中，App本地配置通知的具体信息并且把配置的通知发送给系统。当App不在前台时，处理交付的通知。* 在远程通知中，你使用你们公司的服务器通过APNS发送数据到用户设备。</code></pre><p>本地通知和远程通知都需要在app里面添加代码来支持调度和处理通知。比如远程通知，你必须提供一个服务环境来支撑从用户设备获取数据和发送通知数据通过APNS。<br><a id="more"></a></p><h1 id="用户通知框架和用户通知UI框架"><a href="#用户通知框架和用户通知UI框架" class="headerlink" title="用户通知框架和用户通知UI框架"></a>用户通知框架和用户通知UI框架</h1><p>对用户来说本地通知和远程通知都是相同的：</p><pre><code>1. 一个屏幕的告警或横幅2. 一个app图标上的徽章3. 一个声音伴随告警，横幅，徽章</code></pre><p><img src="/2018/05/15/消息推送-2018-0514/badged_app.png" alt="badged_app"><br>图1-1:app图标上的徽章</p><h1 id="APNs介绍"><a href="#APNs介绍" class="headerlink" title="APNs介绍"></a>APNs介绍</h1><p><img src="/2018/05/15/消息推送-2018-0514/remote_notif_simple.png" alt="remote_notif_simple"><br> 可以分为三个阶段：<br>第一阶段： APNS Pusher 应用程序把要发送的消息，目的iphone的标示打包，发给APNS<br>第二阶段：APNS 在自身的已注册 Push 服务列表中，查找有相应标识的 iphone, 并把消息发到 iphone<br>第三阶段： iphone 把发来的消息传递给相应的应用程序，并且按照设定弹出 Push 通知<br><img src="/2018/05/15/消息推送-2018-0514/消息推送应用内.png" alt="消息推送应用内"><br>  1: 首先是应用程序注册消息推送<br>  2: iOS 跟 APNS Service 要 deviceToken<br>  3: 应用程序将 deviceToken 发送给PUSH服务端程序<br>  4: 服务端程序向APNS服务器发送消息<br>  5: APNS 服务将消息发送给iphone应用程序</p><h1 id="通知代码"><a href="#通知代码" class="headerlink" title="通知代码"></a>通知代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">#pragma mark - 本地通知&amp;远程通知</div><div class="line">#pragma mark -注册</div><div class="line">#ifdef __IPHONE_8_0</div><div class="line">- (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings</div><div class="line">&#123;</div><div class="line">    [application registerForRemoteNotifications];</div><div class="line">&#125;</div><div class="line">#endif</div><div class="line"></div><div class="line">- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(nonnull NSData *)deviceToken</div><div class="line">&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line">- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error</div><div class="line">&#123;</div><div class="line">&#125;</div><div class="line">#pragma mark -接收通知</div><div class="line">//IOS 10之前</div><div class="line">- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification</div><div class="line">&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line">//IOS 10之前</div><div class="line">- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo</div><div class="line">&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line">//IOS 10之前 替换 didReceiveRemoteNotification 这个方法</div><div class="line">- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler</div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">//iOS10，只有当应用程序在前台时，该方法将被调用。</div><div class="line">- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler</div><div class="line">&#123;</div><div class="line">&#125;</div><div class="line">//IOS10 推送被点击</div><div class="line">- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void(^)())completionHandler</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;消息推送&quot;&gt;&lt;a href=&quot;#消息推送&quot; class=&quot;headerlink&quot; title=&quot;消息推送&quot;&gt;&lt;/a&gt;消息推送&lt;/h1&gt;&lt;p&gt;当App获取到新的数据时，即使你的App没有在前台运行，本地通知和远程通知都是通知用户的方式。例如：当获取新的消息时，即时通讯App让用户知道。一个日历的app通知用户即将到的约会。本地通知和远程通知的区别是显而易见的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* 在本地通知中，App本地配置通知的具体信息并且把配置的通知发送给系统。当App不在前台时，处理交付的通知。
* 在远程通知中，你使用你们公司的服务器通过APNS发送数据到用户设备。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本地通知和远程通知都需要在app里面添加代码来支持调度和处理通知。比如远程通知，你必须提供一个服务环境来支撑从用户设备获取数据和发送通知数据通过APNS。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="-IOS" scheme="http://tonglinchina.com/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>风萧</title>
    <link href="http://tonglinchina.com/2017/11/29/diary-2017-1129/"/>
    <id>http://tonglinchina.com/2017/11/29/diary-2017-1129/</id>
    <published>2017-11-29T14:39:27.000Z</published>
    <updated>2017-11-29T15:28:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近闲来，得此博客，第一篇博客。<br>深夜的风，萧萧。<br>冬姑娘来了。</p><p>近来总有个远虑：客户端的前景。<br>隐约中客户端变的不那么重要，<br>微信的流量吸引，都希望在微信里面玩<br>出现了小程序，内嵌h5。<br>开发的周期及速度<br>出现了各种跨平台框架：weex,react native<br>插件式的框架cordova…<br>这些让原本做ios或安卓的都不能仅关注原生开发<br>然而ios本身也在不断更新，<br>如：今年的开发者大会：ARKit,coreML及swift 4.0</p><p>突然发现学习的东西太多太多<br>如何发展ios的专业知识的深度的同时又提升自己的广度呢<br>往往导致了深度没够，广度欠的境遇。</p><p>在工作3后不能在局限会用控件及好的三方框架<br>学习其中的原理及吸取实现的方式，规范及自己很少用的技术<br>这在其深</p><p>学习自己陌生但又相关的领域知识<br>新语言的学习，时刻关注开发者大会的更新，熟悉跨平台技术原理<br>这在其广</p><p>脱去懒惰，穿上勤奋<br>迎接萧萧的冬姑娘</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近闲来，得此博客，第一篇博客。&lt;br&gt;深夜的风，萧萧。&lt;br&gt;冬姑娘来了。&lt;/p&gt;
&lt;p&gt;近来总有个远虑：客户端的前景。&lt;br&gt;隐约中客户端变的不那么重要，&lt;br&gt;微信的流量吸引，都希望在微信里面玩&lt;br&gt;出现了小程序，内嵌h5。&lt;br&gt;开发的周期及速度&lt;br&gt;出现了各种
      
    
    </summary>
    
    
      <category term="-杂谈" scheme="http://tonglinchina.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
</feed>
